version: "3.9"

services:
  db:
    image: postgis/postgis:16-3.4
    container_name: aoidb
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d:ro

  redis:
    image: redis:7-alpine
    container_name: aoiredis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"

  minio:
    image: minio/minio:latest
    container_name: aoiminio
    restart: unless-stopped
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "${MINIO_PORT:-9000}:9000"
      - "${MINIO_CONSOLE_PORT:-9001}:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

  create-bucket:
    image: minio/mc:latest
    depends_on:
      - minio
    entrypoint: >-
      /bin/sh -c "
      mc alias set local http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
      mc mb --ignore-existing local/${MINIO_BUCKET}
      "

  api:
    build:
      context: ../services/api
      dockerfile: Dockerfile
    container_name: aoiapi
    depends_on:
      - db
      - redis
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      API_PORT: ${API_PORT}
    ports:
      - "${API_PORT:-8000}:8000"
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]

  ingest:
    build:
      context: ../ingest
      dockerfile: Dockerfile
    container_name: aoiingest
    depends_on:
      - db
      - minio
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PORT}/${POSTGRES_DB}
      INGEST_ADAPTER: au_wildfire_fixture
      INGEST_RUN_ON_START: "true"
      FEED_URL: ${FEED_URL}
      INGEST_INTERVAL_SECONDS: ${INGEST_INTERVAL_SECONDS}
      AIS_FEED_URL: ${AIS_FEED_URL}
      BUSHFIRE_FEED_URL: ${BUSHFIRE_FEED_URL}
      CYBER_FEED_URL: ${CYBER_FEED_URL}
      NEWS_FEED_URL: ${NEWS_FEED_URL}
    command: ["python", "-m", "ingest.run", "--adapter", "${INGEST_ADAPTER:-au_wildfire_fixture}"]

  web:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: aoiweb
    depends_on:
      - api
    ports:
      - "${FRONTEND_PORT:-5173}:80"

volumes:
  db_data:
  minio_data:
